(()=>{"use strict";var e={402:(e,n,t)=>{t.d(n,{Z:()=>d});var r=t(537),a=t.n(r),o=t(645),s=t.n(o)()(a());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),s.push([e.id,':root {\n  --header-background: #67e8f9;\n  --sidebar-background: #e2e8f0;\n  --shadow-color: #94a3b8;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  /* min-height: 100vh; */\n  padding: 0;\n  margin: 0;\n  overflow: auto;\n  font-family: Roboto, sans-serif;\n}\n\n.header {\n  background-color: var(--header-background);\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.app-title {\n  font-weight: bold;\n  font-size: xx-large;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 2fr 5fr;\n}\n\n.project-sidebar {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  gap: 10px;\n  background-color: var(--sidebar-background);\n  overflow-y: auto;\n}\n\n.projects-header,\n.projects-wrapper,\n.add-project-btn {\n  margin-left: 20px;\n}\n\n.projects-header {\n  font-weight: bold;\n  font-size: xx-large;\n  margin-top: 10px;\n}\n\n.projects-wrapper {\n  display: grid;\n  gap: 10px;\n}\n\n.project-card {\n  width: 80%;\n  border: solid;\n  word-break: break-all;\n  /* overflow-wrap: break-word; */\n  padding: 10px;\n  font-size: large;\n  display: grid;\n  grid-template-columns: 1fr 4fr 1fr;\n  gap: 5px;\n}\n\n.selected-project {\n    background-color: #94a3b8;\n}\n\n.project-card svg {\n    grid-column: 1;\n  width: 50%;\n  flex-shrink: 0;\n  align-self: center;\n  justify-self: center;\n}\n\n.add-project-btn-wrapper, .add-task-btn-wrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.add-project-btn, .add-task-btn {\n  position: relative;\n  justify-self: center;\n  font-size: 100px;\n  border-radius: 100%;\n  height: 40px;\n  width: 40px;\n  vertical-align: middle;\n  border: hidden;\n  margin: 4px;\n  padding: 10px;\n  background: none;\n  /* box-shadow: 0px 0px 7px var(--shadow-color); */\n}\n\n.add-project-btn::before,\n.add-project-btn::after, .add-task-btn::before,\n.add-task-btn::after  {\n  content: "";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: black;\n}\n\n.add-project-btn::before, .add-task-btn::before {\n  width: 4px;\n  margin: 10px auto;\n}\n.add-project-btn::after, .add-task-btn::after {\n  margin: auto 10px;\n  height: 4px;\n}\n\n.add-project-btn:hover, .add-task-btn:hover {\n  transform: scale(1.25) perspective(1px);\n}\n\n\n.project-view {\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    align-items: center;\n    gap: 20px;\n}\n\n.project-name-display {\n    font-size: xx-large;\n    font-weight: bold;\n    justify-self: center;\n    overflow-wrap: anywhere;\n}\n\n.task-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.task-card {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    border: solid;\n    padding: 10px;\n    width: 70%;\n    overflow-wrap: anywhere;\n}\n\n.check-btn {\n    width: 20px;\n    flex-shrink: 0;\n}\n\n.task-card span {\n    font-size: large;\n}\n\n.hovered-project {\n    background-color: #94a3b8;\n}\n\n.delete-project-btn {\n    grid-column: 3;\n    align-self: center;\n    margin-left: 5px;\n    justify-self: end;\n    border: hidden;\n    width: 25px;\n    height: 25px;\n    position: relative;\n    margin: 4px;\n    display: inline-block;\n    vertical-align: middle;\n    background: none;\n  }\n  \n  .delete-project-btn::before,\n  .delete-project-btn::after {\n    content: "";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: "";\n    background: black;\n    margin: auto 4px;\n    height: 2px;\n    transform: rotateZ(45deg);\n  \n  }\n  \n  .delete-project-btn::after {\n    transform: rotateZ(-45deg);\n  }\n\n.add-project-form {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    width: 70%;\n    align-self: center;\n    gap: 5px;\n}\n\n#add-project-name-input {\n    grid-column: 1 / 3;\n}',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAEA;EACE,4BAA4B;EAC5B,6BAA6B;EAC7B,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,UAAU;EACV,SAAS;EACT,cAAc;EACd,+BAA+B;AACjC;;AAEA;EACE,0CAA0C;EAC1C,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,SAAS;EACT,2CAA2C;EAC3C,gBAAgB;AAClB;;AAEA;;;EAGE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,UAAU;EACV,aAAa;EACb,qBAAqB;EACrB,+BAA+B;EAC/B,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,kCAAkC;EAClC,QAAQ;AACV;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;EAChB,UAAU;EACV,cAAc;EACd,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,gBAAgB;EAChB,mBAAmB;EACnB,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,cAAc;EACd,WAAW;EACX,aAAa;EACb,gBAAgB;EAChB,iDAAiD;AACnD;;AAEA;;;EAGE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,UAAU;EACV,iBAAiB;AACnB;AACA;EACE,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,uCAAuC;AACzC;;;AAGA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,mBAAmB;IACnB,SAAS;AACb;;AAEA;IACI,mBAAmB;IACnB,iBAAiB;IACjB,oBAAoB;IACpB,uBAAuB;AAC3B;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,SAAS;IACT,WAAW;AACf;;AAEA;IACI,aAAa;IACb,SAAS;IACT,mBAAmB;IACnB,aAAa;IACb,aAAa;IACb,UAAU;IACV,uBAAuB;AAC3B;;AAEA;IACI,WAAW;IACX,cAAc;AAClB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;IACI,cAAc;IACd,kBAAkB;IAClB,gBAAgB;IAChB,iBAAiB;IACjB,cAAc;IACd,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,WAAW;IACX,qBAAqB;IACrB,sBAAsB;IACtB,gBAAgB;EAClB;;EAEA;;IAEE,WAAW;IACX,kBAAkB;IAClB,MAAM;IACN,OAAO;IACP,QAAQ;IACR,SAAS;IACT,WAAW;IACX,iBAAiB;IACjB,gBAAgB;IAChB,WAAW;IACX,yBAAyB;;EAE3B;;EAEA;IACE,0BAA0B;EAC5B;;AAEF;IACI,aAAa;IACb,8BAA8B;IAC9B,2BAA2B;IAC3B,UAAU;IACV,kBAAkB;IAClB,QAAQ;AACZ;;AAEA;IACI,kBAAkB;AACtB",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");\n\n:root {\n  --header-background: #67e8f9;\n  --sidebar-background: #e2e8f0;\n  --shadow-color: #94a3b8;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  /* min-height: 100vh; */\n  padding: 0;\n  margin: 0;\n  overflow: auto;\n  font-family: Roboto, sans-serif;\n}\n\n.header {\n  background-color: var(--header-background);\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.app-title {\n  font-weight: bold;\n  font-size: xx-large;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 2fr 5fr;\n}\n\n.project-sidebar {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  gap: 10px;\n  background-color: var(--sidebar-background);\n  overflow-y: auto;\n}\n\n.projects-header,\n.projects-wrapper,\n.add-project-btn {\n  margin-left: 20px;\n}\n\n.projects-header {\n  font-weight: bold;\n  font-size: xx-large;\n  margin-top: 10px;\n}\n\n.projects-wrapper {\n  display: grid;\n  gap: 10px;\n}\n\n.project-card {\n  width: 80%;\n  border: solid;\n  word-break: break-all;\n  /* overflow-wrap: break-word; */\n  padding: 10px;\n  font-size: large;\n  display: grid;\n  grid-template-columns: 1fr 4fr 1fr;\n  gap: 5px;\n}\n\n.selected-project {\n    background-color: #94a3b8;\n}\n\n.project-card svg {\n    grid-column: 1;\n  width: 50%;\n  flex-shrink: 0;\n  align-self: center;\n  justify-self: center;\n}\n\n.add-project-btn-wrapper, .add-task-btn-wrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.add-project-btn, .add-task-btn {\n  position: relative;\n  justify-self: center;\n  font-size: 100px;\n  border-radius: 100%;\n  height: 40px;\n  width: 40px;\n  vertical-align: middle;\n  border: hidden;\n  margin: 4px;\n  padding: 10px;\n  background: none;\n  /* box-shadow: 0px 0px 7px var(--shadow-color); */\n}\n\n.add-project-btn::before,\n.add-project-btn::after, .add-task-btn::before,\n.add-task-btn::after  {\n  content: "";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: black;\n}\n\n.add-project-btn::before, .add-task-btn::before {\n  width: 4px;\n  margin: 10px auto;\n}\n.add-project-btn::after, .add-task-btn::after {\n  margin: auto 10px;\n  height: 4px;\n}\n\n.add-project-btn:hover, .add-task-btn:hover {\n  transform: scale(1.25) perspective(1px);\n}\n\n\n.project-view {\n    display: flex;\n    flex-direction: column;\n    padding: 20px;\n    align-items: center;\n    gap: 20px;\n}\n\n.project-name-display {\n    font-size: xx-large;\n    font-weight: bold;\n    justify-self: center;\n    overflow-wrap: anywhere;\n}\n\n.task-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n    width: 100%;\n}\n\n.task-card {\n    display: flex;\n    gap: 10px;\n    align-items: center;\n    border: solid;\n    padding: 10px;\n    width: 70%;\n    overflow-wrap: anywhere;\n}\n\n.check-btn {\n    width: 20px;\n    flex-shrink: 0;\n}\n\n.task-card span {\n    font-size: large;\n}\n\n.hovered-project {\n    background-color: #94a3b8;\n}\n\n.delete-project-btn {\n    grid-column: 3;\n    align-self: center;\n    margin-left: 5px;\n    justify-self: end;\n    border: hidden;\n    width: 25px;\n    height: 25px;\n    position: relative;\n    margin: 4px;\n    display: inline-block;\n    vertical-align: middle;\n    background: none;\n  }\n  \n  .delete-project-btn::before,\n  .delete-project-btn::after {\n    content: "";\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    content: "";\n    background: black;\n    margin: auto 4px;\n    height: 2px;\n    transform: rotateZ(45deg);\n  \n  }\n  \n  .delete-project-btn::after {\n    transform: rotateZ(-45deg);\n  }\n\n.add-project-form {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 1fr 1fr;\n    width: 70%;\n    align-self: center;\n    gap: 5px;\n}\n\n#add-project-name-input {\n    grid-column: 1 / 3;\n}'],sourceRoot:""}]);const d=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,a,o){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var d=0;d<this.length;d++){var c=this[d][0];null!=c&&(s[c]=!0)}for(var i=0;i<e.length;i++){var l=[].concat(e[i]);r&&s[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[n].concat([o]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var o={},s=[],d=0;d<e.length;d++){var c=e[d],i=r.base?c[0]+r.base:c[0],l=o[i]||0,A="".concat(i," ").concat(l);o[i]=l+1;var p=t(A),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var f=a(u,r);r.byIndex=d,n.splice(d,0,{identifier:A,updater:f,references:1})}s.push(A)}return s}function a(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,a){var o=r(e=e||[],a=a||{});return function(e){e=e||[];for(var s=0;s<o.length;s++){var d=t(o[s]);n[d].references--}for(var c=r(e,a),i=0;i<o.length;i++){var l=t(o[i]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}o=c}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},8:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(507);const a={updateItem:e=>{const n=e.getTasks(),t={};for(const e in n){const r={};r.title=n[e].getTitle(),r.desc=n[e].getDesc(),r.notes=n[e].getNotes(),r.dueDate=n[e].getDueDate(),r.done=n[e].getDone(),r.priority=n[e].getPriority(),t[e]=r}const r={name:e.getName(),desc:e.getDesc(),notes:e.getNotes(),dueDate:e.getDueDate(),tasks:t};localStorage.setItem(e.getName(),JSON.stringify(r))},removeItem:e=>{localStorage.removeItem(e)},clearStorage:()=>{localStorage.clear()}},o=(()=>{const e={},n=(n,o=null,s=null,d=null,c=null)=>{if(!(n in e)){const i=(()=>{let e=null,n=null,t=null,a=null;const o={};return{getName:()=>e,getDesc:()=>n,getNotes:()=>t,getDueDate:()=>a,getTasks:()=>o,setName:n=>{e=n;for(const e in o)o[e].setProject(n)},setDesc:e=>{n=e},setDueDate:(e,n,t)=>{e instanceof Number&&n instanceof Number&&t instanceof Number&&(a=new Date(e,n,t))},setNotes:e=>{t=e},createTask:(n,t=null,a=null,s=null,d=0)=>{if(n&&!(n in o)){const c=(0,r.Z)();return c.setTitle(n),c.setDesc(t),c.setDueDate(a),c.setNotes(s),c.setPriority(d),c.setProject(e),o[n]=c,!0}return!1},removeTask:e=>{delete o[e]}}})();i.setName(n),i.setDesc(o),i.setNotes(s),i.setDueDate(d),e[n]=i;for(const e in c)t(n,e,c[e].desc,c[e].dueDate,c[e].notes,c[e].priority);return a.updateItem(i),!0}return!1},t=(n,t,r=null,o=null,s=null,d=0)=>{const c=e[n];c.createTask(t,r,s,o,d),a.updateItem(c)};return{getProjects:()=>e,createProject:n,addTask:t,removeTask:(n,t)=>{const r=e[n],o=r.getTasks()[t];r.removeTask(o.getTitle()),a.updateItem(r)},deleteProject:n=>{delete e[n],a.removeItem(n)},loadProjects:()=>{const e={...localStorage};for(const r in e){const a=JSON.parse(e[r]),o=a.tasks;n(r,a.desc,a.notes,a.dueDate);for(const e in o)t(r,e.title,e.desc,e.dueDate,e.notes,e.priority)}}}})(),s=o},507:(e,n,t)=>{t.d(n,{Z:()=>r});const r=()=>{let e=null,n=null,t=null,r=null,a=null,o=!1,s=null;return{getTitle:()=>e,getDesc:()=>n,getNotes:()=>r,getDueDate:()=>t,getPriority:()=>a,getDone:()=>o,getProject:()=>s,setTitle:n=>{e=n},setDesc:e=>{n=e},setDueDate:(e,n,r)=>{e instanceof Number&&n instanceof Number&&r instanceof Number&&(t=new Date(e,n,r))},setNotes:e=>{r=e},setPriority:e=>{a=e},setProject:e=>{s=e},toggleDone:()=>{o=!o}}}}},n={};function t(r){var a=n[r];if(void 0!==a)return a.exports;var o=n[r]={id:r,exports:{}};return e[r](o,o.exports,t),o.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(8);function n(e,n,t=[],r=[]){const a=document.createElementNS("http://www.w3.org/2000/svg","svg"),o=document.createElementNS("http://www.w3.org/2000/svg","path");a.setAttribute("xmlns","http://www.w3.org/2000/svg"),a.setAttribute("fill","currentColor"),a.setAttribute("viewBox","0 0 512 512"),a.classList.add("post-icon");for(let e=0;e<t.length;e++)a.classList.add(t[e]);for(let e=0;e<r.length;e++)o.setAttribute(r[e][0],r[e][1]);return o.setAttribute("d",n),a.appendChild(o),e.appendChild(a)}var r=t(379),a=t.n(r),o=t(795),s=t.n(o),d=t(569),c=t.n(d),i=t(565),l=t.n(i),A=t(216),p=t.n(A),u=t(589),f=t.n(u),m=t(402),g={};g.styleTagTransform=f(),g.setAttributes=l(),g.insert=c().bind(null,"head"),g.domAPI=s(),g.insertStyleElement=p(),a()(m.Z,g),m.Z&&m.Z.locals&&m.Z.locals;const C=(()=>{let t=null;const r="M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z",a=(document.body.appendChild((()=>{const e=document.createElement("div");e.classList.add("header");const n=document.createElement("span");return n.classList.add("app-title"),n.textContent="To Do List",e.appendChild(n),e})()),(()=>{const n=document.createElement("div");n.classList.add("content");const t=document.createElement("div");t.classList.add("project-sidebar");const r=document.createElement("div");r.classList.add("project-view"),e.Z.createProject("hsdasdfdfjkdsjfsdjfsdidfjsdfjisdfijsfdsdfdsfsdsjklssfkjdsllksfjsfdjklsfkdjlfjsdklijsodfsdfij","asdshfufas",null,null,{sda:{title:"sda",desc:"saf",notes:"Saddas",dueDate:"dsadas",priority:0},"sdfdfdf'l's;'ld;';'ldl';gl;'fl;'f;glfdgfdjgsdjkgsdfjgdsklgjdgkdlskldgsklsdgklsdgjklgdskljs":{title:"sdfdfdf'l's;'ld;';'ldl';gl;'fl;'f;glfdgfdjgsdjkgsdfjgdsklgjdgkdlskldgsklsdgklsdgjklgdskljs",desc:"saf",notes:"Saddas",dueDate:"dsadas",priority:0}}),e.Z.createProject("hsj","asdss",null,null,{sda:{title:"sda",desc:"saf",notes:"Saddas",dueDate:"dsadas",priority:0},sdfddgklsdgjklgdskljs:{title:"sdfddgklsdgjklgdskljs",desc:"saf",notes:"Saddas",dueDate:"dsadas",priority:0}}),n.appendChild(t),n.appendChild(r),document.body.appendChild(n)})(),e=>{t&&t.classList.remove("selected-project");let n=e.srcElement;for(;!n.classList.contains("project-card");)n=n.parentElement;n.classList.add("selected-project"),t=n;const r=n.querySelector(".project-name").textContent;i(r)}),o=n=>{let t=n.srcElement;for(;!t.classList.contains("project-card");)t=t.parentElement;const r=t.textContent;e.Z.deleteProject(r),t.parentElement.removeChild(t)},s=e=>{let n=e.srcElement;for(;!n.classList.contains("project-card");)n=n.parentElement;if(n.classList.add("hovered-project"),!document.querySelector(".delete-project-btn")){const e=document.createElement("button");e.classList.add("delete-project-btn"),e.addEventListener("click",o),n.appendChild(e)}},d=e=>{let n=e.srcElement;for(;!n.classList.contains("project-card");)n=n.parentElement;n.classList.remove("hovered-project");const t=document.querySelector(".delete-project-btn");n.removeChild(t)},c=(e,t)=>{const r=document.createElement("div");r.classList.add("project-card"),n(r,"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z");const o=document.createElement("span");o.classList.add("project-name"),o.textContent=e.getName(),r.addEventListener("click",a),r.addEventListener("mouseover",s),r.addEventListener("mouseleave",d),r.appendChild(o),t.appendChild(r)},i=n=>{const t=document.querySelector(".project-view");t.replaceChildren();const r=e.Z.getProjects()[n],a=document.createElement("div");a.classList.add("project-name-display"),a.textContent=n;const o=document.createElement("div");o.classList.add("task-wrapper");const s=r.getTasks();for(const e in s)A(o,s[e]);const d=document.createElement("div");d.classList.add("add-task-btn-wrapper");const c=document.createElement("button");c.classList.add("add-task-btn"),d.appendChild(c),t.appendChild(a),t.appendChild(o),t.appendChild(d)},l=e=>{let t=e.srcElement;for(;!t.classList.contains("check-btn");)t=t.parentElement;t.replaceChildren(),t.classList.contains("unchecked")?(n(t,"M256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM369 209L241 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L335 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z"),t.classList.remove("unchecked"),t.classList.add("checked")):(n(t,r),t.classList.remove("checked"),t.classList.add("unchecked"))},A=(e,t)=>{const a=document.createElement("div");a.classList.add("task-card");const o=document.createElement("div");o.classList.add("check-btn"),o.classList.add("unchecked"),n(o,r),o.addEventListener("click",l);const s=document.createElement("span");s.classList.add("task-card-title"),s.textContent=t.getTitle(),a.appendChild(o),a.appendChild(s),e.appendChild(a)},p=e=>{let n=e.srcElement;for(;!n.classList.contains("add-project-btn-wrapper");)n=n.parentElement;let t=e.srcElement;for(;!t.classList.contains("project-sidebar");)t=t.parentElement;t.removeChild(n);const r=document.createElement("form");r.classList.add("add-project-form");const a=document.createElement("input");a.id="add-project-name-input",a.setAttribute("placeholder","My Project"),a.addEventListener("keypress",b.submitProject);const o=document.createElement("button");o.classList.add("cancel-add-project"),o.textContent="Cancel",o.addEventListener("click",u);const s=document.createElement("button");s.classList.add("submit-project"),s.textContent="Submit",s.addEventListener("click",b.submitProject),r.appendChild(a),r.appendChild(o),r.appendChild(s),t.appendChild(r)},u=()=>{const e=document.querySelector(".add-project-form"),n=document.querySelector(".project-sidebar");n.removeChild(e);const t=document.createElement("div");t.classList.add("add-project-btn-wrapper");const r=document.createElement("button");r.classList.add("add-project-btn"),t.appendChild(r),t.addEventListener("click",p),n.appendChild(t)};return{displayProjectsSidebar:e=>{const n=document.querySelector(".project-sidebar");n.replaceChildren();const t=document.createElement("div");t.classList.add("projects-header"),t.textContent="Projects";const r=document.createElement("div");r.classList.add("projects-wrapper");const a=document.createElement("div");a.classList.add("add-project-btn-wrapper");const o=document.createElement("button");o.classList.add("add-project-btn"),a.appendChild(o),a.addEventListener("click",p);for(const n in e)c(e[n],r);n.appendChild(t),n.appendChild(r),n.appendChild(a)},displayProjectCard:c,hideProjectForm:u}})(),b=((()=>{e.Z.loadProjects();const n=e.Z.getProjects();C.displayProjectsSidebar(n)})(),{submitProject:n=>{if("click"===n.type||"Enter"===n.key){n.preventDefault();const t=document.querySelector("#add-project-name-input").value,r=e.Z.createProject(t),a=e.Z.getProjects();return r&&(C.displayProjectCard(a[t],document.querySelector(".projects-wrapper")),C.hideProjectForm()),r?t:null}}})})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,