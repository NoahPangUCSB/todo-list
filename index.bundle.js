(()=>{"use strict";var e={402:(e,n,t)=>{t.d(n,{Z:()=>c});var r=t(537),o=t.n(r),a=t(645),s=t.n(a)()(o());s.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap);"]),s.push([e.id,':root {\n  --header-background: #67e8f9;\n  --sidebar-background: #e2e8f0;\n  --shadow-color: #94a3b8;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  /* min-height: 100vh; */\n  padding: 0;\n  margin: 0;\n  overflow: auto;\n  font-family: Roboto, sans-serif;\n}\n\n.header {\n  background-color: var(--header-background);\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.app-title {\n  font-weight: bold;\n  font-size: xx-large;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 2fr 5fr;\n}\n\n.project-sidebar {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  gap: 10px;\n  background-color: var(--sidebar-background);\n  overflow-y: auto;\n}\n\n.projects-header,\n.projects-wrapper,\n.add-project-btn {\n  margin-left: 20px;\n}\n\n.projects-header {\n  font-weight: bold;\n  font-size: xx-large;\n  margin-top: 10px;\n}\n\n.projects-wrapper {\n  display: grid;\n  gap: 10px;\n}\n\n.project-card {\n  width: 80%;\n  border: solid;\n  word-break: break-all;\n  /* overflow-wrap: break-word; */\n  padding: 10px;\n  font-size: large;\n  display: flex;\n  gap: 5px;\n}\n\n.selected-project {\n    background-color: #94a3b8;\n}\n\n.project-card svg {\n  width: 8%;\n  flex-shrink: 0;\n}\n\n.add-project-btn-wrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.add-project-btn {\n  position: relative;\n  justify-self: center;\n  font-size: 100px;\n  border-radius: 100%;\n  height: 40px;\n  width: 40px;\n  vertical-align: middle;\n  border: hidden;\n  margin: 4px;\n  padding: 10px;\n  background: none;\n  /* box-shadow: 0px 0px 7px var(--shadow-color); */\n}\n\n.add-project-btn::before,\n.add-project-btn::after {\n  content: "";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: black;\n}\n\n.add-project-btn::before {\n  width: 4px;\n  margin: 10px auto;\n}\n.add-project-btn::after {\n  margin: auto 10px;\n  height: 4px;\n}\n\n.add-project-btn:hover {\n  transform: scale(1.25) perspective(1px);\n}\n',"",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAEA;EACE,4BAA4B;EAC5B,6BAA6B;EAC7B,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,UAAU;EACV,SAAS;EACT,cAAc;EACd,+BAA+B;AACjC;;AAEA;EACE,0CAA0C;EAC1C,YAAY;EACZ,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,8BAA8B;AAChC;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,iBAAiB;EACjB,SAAS;EACT,2CAA2C;EAC3C,gBAAgB;AAClB;;AAEA;;;EAGE,iBAAiB;AACnB;;AAEA;EACE,iBAAiB;EACjB,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,SAAS;AACX;;AAEA;EACE,UAAU;EACV,aAAa;EACb,qBAAqB;EACrB,+BAA+B;EAC/B,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,QAAQ;AACV;;AAEA;IACI,yBAAyB;AAC7B;;AAEA;EACE,SAAS;EACT,cAAc;AAChB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,oBAAoB;EACpB,gBAAgB;EAChB,mBAAmB;EACnB,YAAY;EACZ,WAAW;EACX,sBAAsB;EACtB,cAAc;EACd,WAAW;EACX,aAAa;EACb,gBAAgB;EAChB,iDAAiD;AACnD;;AAEA;;EAEE,WAAW;EACX,kBAAkB;EAClB,MAAM;EACN,OAAO;EACP,QAAQ;EACR,SAAS;EACT,iBAAiB;AACnB;;AAEA;EACE,UAAU;EACV,iBAAiB;AACnB;AACA;EACE,iBAAiB;EACjB,WAAW;AACb;;AAEA;EACE,uCAAuC;AACzC",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap");\n\n:root {\n  --header-background: #67e8f9;\n  --sidebar-background: #e2e8f0;\n  --shadow-color: #94a3b8;\n}\n\nbody {\n  display: flex;\n  flex-direction: column;\n  /* min-height: 100vh; */\n  padding: 0;\n  margin: 0;\n  overflow: auto;\n  font-family: Roboto, sans-serif;\n}\n\n.header {\n  background-color: var(--header-background);\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.app-title {\n  font-weight: bold;\n  font-size: xx-large;\n}\n\n.content {\n  display: grid;\n  grid-template-columns: 2fr 5fr;\n}\n\n.project-sidebar {\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  gap: 10px;\n  background-color: var(--sidebar-background);\n  overflow-y: auto;\n}\n\n.projects-header,\n.projects-wrapper,\n.add-project-btn {\n  margin-left: 20px;\n}\n\n.projects-header {\n  font-weight: bold;\n  font-size: xx-large;\n  margin-top: 10px;\n}\n\n.projects-wrapper {\n  display: grid;\n  gap: 10px;\n}\n\n.project-card {\n  width: 80%;\n  border: solid;\n  word-break: break-all;\n  /* overflow-wrap: break-word; */\n  padding: 10px;\n  font-size: large;\n  display: flex;\n  gap: 5px;\n}\n\n.selected-project {\n    background-color: #94a3b8;\n}\n\n.project-card svg {\n  width: 8%;\n  flex-shrink: 0;\n}\n\n.add-project-btn-wrapper {\n  display: flex;\n  justify-content: center;\n}\n\n.add-project-btn {\n  position: relative;\n  justify-self: center;\n  font-size: 100px;\n  border-radius: 100%;\n  height: 40px;\n  width: 40px;\n  vertical-align: middle;\n  border: hidden;\n  margin: 4px;\n  padding: 10px;\n  background: none;\n  /* box-shadow: 0px 0px 7px var(--shadow-color); */\n}\n\n.add-project-btn::before,\n.add-project-btn::after {\n  content: "";\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: black;\n}\n\n.add-project-btn::before {\n  width: 4px;\n  margin: 10px auto;\n}\n.add-project-btn::after {\n  margin: auto 10px;\n  height: 4px;\n}\n\n.add-project-btn:hover {\n  transform: scale(1.25) perspective(1px);\n}\n'],sourceRoot:""}]);const c=s},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var s={};if(r)for(var c=0;c<this.length;c++){var i=this[c][0];null!=i&&(s[i]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&s[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},s=[],c=0;c<e.length;c++){var i=e[c],d=r.base?i[0]+r.base:i[0],l=a[d]||0,A="".concat(d," ").concat(l);a[d]=l+1;var p=t(A),u={css:i[1],media:i[2],sourceMap:i[3],supports:i[4],layer:i[5]};if(-1!==p)n[p].references++,n[p].updater(u);else{var f=o(u,r);r.byIndex=c,n.splice(c,0,{identifier:A,updater:f,references:1})}s.push(A)}return s}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var s=0;s<a.length;s++){var c=t(a[s]);n[c].references--}for(var i=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=i}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},8:(e,n,t)=>{t.d(n,{Z:()=>s});var r=t(507);const o={updateItem:e=>{const n=e.getTasks(),t={};for(const e in n){const r={};r.title=n[e].getTitle(),r.desc=n[e].getDesc(),r.notes=n[e].getNotes(),r.dueDate=n[e].getDueDate(),r.done=n[e].getDone(),r.priority=n[e].getPriority(),t[e]=r}const r={name:e.getName(),desc:e.getDesc(),notes:e.getNotes(),dueDate:e.getDueDate(),tasks:t};localStorage.setItem(e.getName(),JSON.stringify(r))},removeItem:e=>{localStorage.removeItem(e)},clearStorage:()=>{localStorage.clear()}},a=(()=>{const e={},n=(n,a=null,s=null,c=null,i=null)=>{if(!(n in e)){const d=(()=>{let e=null,n=null,t=null,o=null;const a={};return{getName:()=>e,getDesc:()=>n,getNotes:()=>t,getDueDate:()=>o,getTasks:()=>a,setName:n=>{e=n;for(const e in a)a[e].setProject(n)},setDesc:e=>{n=e},setDueDate:(e,n,t)=>{e instanceof Number&&n instanceof Number&&t instanceof Number&&(o=new Date(e,n,t))},setNotes:e=>{t=e},createTask:(n,t=null,o=null,s=null,c=0)=>{if(n in a)return!1;{const i=(0,r.Z)();return i.setTitle(n),i.setDesc(t),i.setDueDate(o),i.setNotes(s),i.setPriority(c),i.setProject(e),a[n]=i,!0}},removeTask:e=>{delete a[e]}}})();d.setName(n),d.setDesc(a),d.setNotes(s),d.setDueDate(c),e[n]=d;for(const e in i)t(n,e,i[e].desc,i[e].dueDate,i[e].notes,i[e].priority);return o.updateItem(d),!0}return!1},t=(n,t,r=null,a=null,s=null,c=0)=>{const i=e[n];i.createTask(t,r,s,a,c),o.updateItem(i)};return{getProjects:()=>e,createProject:n,addTask:t,removeTask:(n,t)=>{const r=e[n],a=r.getTasks()[t];r.removeTask(a.getTitle()),o.updateItem(r)},deleteProject:n=>{delete e[n],o.removeItem(n)},loadProjects:()=>{const e={...localStorage};for(const r in e){const o=JSON.parse(e[r]),a=o.tasks;n(r,o.desc,o.notes,o.dueDate);for(const e in a)t(r,e.title,e.desc,e.dueDate,e.notes,e.priority)}}}})(),s=a},507:(e,n,t)=>{t.d(n,{Z:()=>r});const r=()=>{let e=null,n=null,t=null,r=null,o=null,a=!1,s=null;return{getTitle:()=>e,getDesc:()=>n,getNotes:()=>r,getDueDate:()=>t,getPriority:()=>o,getDone:()=>a,getProject:()=>s,setTitle:n=>{e=n},setDesc:e=>{n=e},setDueDate:(e,n,r)=>{e instanceof Number&&n instanceof Number&&r instanceof Number&&(t=new Date(e,n,r))},setNotes:e=>{r=e},setPriority:e=>{o=e},setProject:e=>{s=e},toggleDone:()=>{a=!a}}}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.nc=void 0,(()=>{var e=t(8),n=t(379),r=t.n(n),o=t(795),a=t.n(o),s=t(569),c=t.n(s),i=t(565),d=t.n(i),l=t(216),A=t.n(l),p=t(589),u=t.n(p),f=t(402),g={};g.styleTagTransform=u(),g.setAttributes=d(),g.insert=c().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=A(),r()(f.Z,g),f.Z&&f.Z.locals&&f.Z.locals;const m=(()=>{let n=null;document.body.appendChild((()=>{const e=document.createElement("div");e.classList.add("header");const n=document.createElement("span");return n.classList.add("app-title"),n.textContent="To Do List",e.appendChild(n),e})()),(()=>{const n=document.createElement("div");n.classList.add("content");const t=document.createElement("div");t.classList.add("project-sidebar");const r=document.createElement("div");r.classList.add("project-view"),e.Z.createProject("hsdasdfdfjkdsjfsdjfsdidfjsdfjisdfijsfdsdfdsfsdsjklssfkjdsllksfjsfdjklsfkdjlfjsdklijsodfsdfij","asdshfufas",null,null,{sda:{name:"sda",desc:"saf",notes:"Saddas",dueDate:"dsadas",priority:0}}),n.appendChild(t),n.appendChild(r),document.body.appendChild(n)})();const t=e=>{n&&n.classList.remove("selected-project");let t=e.srcElement;for(;!t.classList.contains("project-card");)t=t.parentElement;t.classList.add("selected-project"),n=t;const r=t.querySelector(".project-name").textContent;o(r)},r=(e,n)=>{const r=document.createElement("div");r.classList.add("project-card"),function(e,n,t=[],r=[]){const o=document.createElementNS("http://www.w3.org/2000/svg","svg"),a=document.createElementNS("http://www.w3.org/2000/svg","path");o.setAttribute("xmlns","http://www.w3.org/2000/svg"),o.setAttribute("fill","currentColor"),o.setAttribute("viewBox","0 0 512 512"),o.classList.add("post-icon");for(let e=0;e<t.length;e++)o.classList.add(t[e]);for(let e=0;e<r.length;e++)a.setAttribute(r[e][0],r[e][1]);a.setAttribute("d",n),o.appendChild(a),e.appendChild(o)}(r,"M438.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L160 338.7 393.4 105.4c12.5-12.5 32.8-12.5 45.3 0z");const o=document.createElement("span");o.classList.add("project-name"),o.textContent=e.getName(),r.addEventListener("click",t),r.appendChild(o),n.appendChild(r)},o=n=>{const t=document.querySelector(".project-view");t.replaceChildren(),e.Z.getProjects()[n];const r=document.createElement("div");r.classList.add("project-name-display"),r.textContent=n,t.appendChild(r)};return{displayProjectsSidebar:e=>{const n=document.querySelector(".project-sidebar");n.replaceChildren();const t=document.createElement("div");t.classList.add("projects-header"),t.textContent="Projects";const o=document.createElement("div");o.classList.add("projects-wrapper");const a=document.createElement("div");a.classList.add("add-project-btn-wrapper");const s=document.createElement("button");s.classList.add("add-project-btn"),a.appendChild(s);for(const n in e)r(e[n],o);n.appendChild(t),n.appendChild(o),n.appendChild(a)}}})();(()=>{e.Z.loadProjects();const n=e.Z.getProjects();m.displayProjectsSidebar(n)})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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OUIsTUFBTStCLEVBQXVCdEosU0FBU1csY0FBYyxPQUNwRDJJLEVBQXFCaEMsVUFBVUMsSUFBSSwyQkFFbkMsTUFBTWdDLEVBQW1CdkosU0FBU1csY0FBYyxVQUNoRDRJLEVBQWlCakMsVUFBVUMsSUFBSSxtQkFDL0IrQixFQUFxQjdJLFlBQVk4SSxHQUVqQyxJQUFJLE1BQU1yRyxLQUFlSSxFQUNyQitFLEVBQW1CL0UsRUFBU0osR0FBY29GLEdBRzlDYyxFQUFlM0ksWUFBWTRJLEdBQzNCRCxFQUFlM0ksWUFBWTZILEdBQzNCYyxFQUFlM0ksWUFBWTZJLEVBQXFCLEVBcUR2RCxFQS9HeUIsR0FrSEQsTUFDakIsSUFBa0JwRSxlQUNsQixNQUFNNUIsRUFBVyxJQUFrQjBCLGNBQ25Da0MsRUFBa0JpQyx1QkFBdUI3RixFQUM1QyxFQUpvQixFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2Nzcy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly90b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9zdG9yYWdlLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9wcm9qZWN0LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy90YXNrLmpzIiwid2VicGFjazovL3RvZG8tbGlzdC93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kby1saXN0L3dlYnBhY2svcnVudGltZS9kZWZpbmUgcHJvcGVydHkgZ2V0dGVycyIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly90b2RvLWxpc3Qvd2VicGFjay9ydW50aW1lL25vbmNlIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9jc3Mvc3R5bGUuY3NzPzlmY2QiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL2luZGV4LmpzIiwid2VicGFjazovL3RvZG8tbGlzdC8uL3NyYy9oZWFkZXIuanMiLCJ3ZWJwYWNrOi8vdG9kby1saXN0Ly4vc3JjL3N2Zy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCJAaW1wb3J0IHVybChodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90bzp3Z2h0QDQwMDs3MDAmZGlzcGxheT1zd2FwKTtcIl0pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIGA6cm9vdCB7XG4gIC0taGVhZGVyLWJhY2tncm91bmQ6ICM2N2U4Zjk7XG4gIC0tc2lkZWJhci1iYWNrZ3JvdW5kOiAjZTJlOGYwO1xuICAtLXNoYWRvdy1jb2xvcjogIzk0YTNiODtcbn1cblxuYm9keSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIC8qIG1pbi1oZWlnaHQ6IDEwMHZoOyAqL1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW46IDA7XG4gIG92ZXJmbG93OiBhdXRvO1xuICBmb250LWZhbWlseTogUm9ib3RvLCBzYW5zLXNlcmlmO1xufVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taGVhZGVyLWJhY2tncm91bmQpO1xuICBoZWlnaHQ6IDgwcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4uYXBwLXRpdGxlIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XG59XG5cbi5jb250ZW50IHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgNWZyO1xufVxuXG4ucHJvamVjdC1zaWRlYmFyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGdhcDogMTBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tc2lkZWJhci1iYWNrZ3JvdW5kKTtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLnByb2plY3RzLWhlYWRlcixcbi5wcm9qZWN0cy13cmFwcGVyLFxuLmFkZC1wcm9qZWN0LWJ0biB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4ucHJvamVjdHMtaGVhZGVyIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XG4gIG1hcmdpbi10b3A6IDEwcHg7XG59XG5cbi5wcm9qZWN0cy13cmFwcGVyIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ2FwOiAxMHB4O1xufVxuXG4ucHJvamVjdC1jYXJkIHtcbiAgd2lkdGg6IDgwJTtcbiAgYm9yZGVyOiBzb2xpZDtcbiAgd29yZC1icmVhazogYnJlYWstYWxsO1xuICAvKiBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkOyAqL1xuICBwYWRkaW5nOiAxMHB4O1xuICBmb250LXNpemU6IGxhcmdlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBnYXA6IDVweDtcbn1cblxuLnNlbGVjdGVkLXByb2plY3Qge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICM5NGEzYjg7XG59XG5cbi5wcm9qZWN0LWNhcmQgc3ZnIHtcbiAgd2lkdGg6IDglO1xuICBmbGV4LXNocmluazogMDtcbn1cblxuLmFkZC1wcm9qZWN0LWJ0bi13cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5hZGQtcHJvamVjdC1idG4ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGp1c3RpZnktc2VsZjogY2VudGVyO1xuICBmb250LXNpemU6IDEwMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBoZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOiA0MHB4O1xuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICBib3JkZXI6IGhpZGRlbjtcbiAgbWFyZ2luOiA0cHg7XG4gIHBhZGRpbmc6IDEwcHg7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIC8qIGJveC1zaGFkb3c6IDBweCAwcHggN3B4IHZhcigtLXNoYWRvdy1jb2xvcik7ICovXG59XG5cbi5hZGQtcHJvamVjdC1idG46OmJlZm9yZSxcbi5hZGQtcHJvamVjdC1idG46OmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQ6IGJsYWNrO1xufVxuXG4uYWRkLXByb2plY3QtYnRuOjpiZWZvcmUge1xuICB3aWR0aDogNHB4O1xuICBtYXJnaW46IDEwcHggYXV0bztcbn1cbi5hZGQtcHJvamVjdC1idG46OmFmdGVyIHtcbiAgbWFyZ2luOiBhdXRvIDEwcHg7XG4gIGhlaWdodDogNHB4O1xufVxuXG4uYWRkLXByb2plY3QtYnRuOmhvdmVyIHtcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xufVxuYCwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvY3NzL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFFQTtFQUNFLDRCQUE0QjtFQUM1Qiw2QkFBNkI7RUFDN0IsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsVUFBVTtFQUNWLFNBQVM7RUFDVCxjQUFjO0VBQ2QsK0JBQStCO0FBQ2pDOztBQUVBO0VBQ0UsMENBQTBDO0VBQzFDLFlBQVk7RUFDWixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixpQkFBaUI7RUFDakIsU0FBUztFQUNULDJDQUEyQztFQUMzQyxnQkFBZ0I7QUFDbEI7O0FBRUE7OztFQUdFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixtQkFBbUI7RUFDbkIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFNBQVM7QUFDWDs7QUFFQTtFQUNFLFVBQVU7RUFDVixhQUFhO0VBQ2IscUJBQXFCO0VBQ3JCLCtCQUErQjtFQUMvQixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixRQUFRO0FBQ1Y7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7RUFDRSxTQUFTO0VBQ1QsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGFBQWE7RUFDYix1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLFdBQVc7RUFDWCxzQkFBc0I7RUFDdEIsY0FBYztFQUNkLFdBQVc7RUFDWCxhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGlEQUFpRDtBQUNuRDs7QUFFQTs7RUFFRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLE1BQU07RUFDTixPQUFPO0VBQ1AsUUFBUTtFQUNSLFNBQVM7RUFDVCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsaUJBQWlCO0FBQ25CO0FBQ0E7RUFDRSxpQkFBaUI7RUFDakIsV0FBVztBQUNiOztBQUVBO0VBQ0UsdUNBQXVDO0FBQ3pDXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBpbXBvcnQgdXJsKFxcXCJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PVJvYm90bzp3Z2h0QDQwMDs3MDAmZGlzcGxheT1zd2FwXFxcIik7XFxuXFxuOnJvb3Qge1xcbiAgLS1oZWFkZXItYmFja2dyb3VuZDogIzY3ZThmOTtcXG4gIC0tc2lkZWJhci1iYWNrZ3JvdW5kOiAjZTJlOGYwO1xcbiAgLS1zaGFkb3ctY29sb3I6ICM5NGEzYjg7XFxufVxcblxcbmJvZHkge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAvKiBtaW4taGVpZ2h0OiAxMDB2aDsgKi9cXG4gIHBhZGRpbmc6IDA7XFxuICBtYXJnaW46IDA7XFxuICBvdmVyZmxvdzogYXV0bztcXG4gIGZvbnQtZmFtaWx5OiBSb2JvdG8sIHNhbnMtc2VyaWY7XFxufVxcblxcbi5oZWFkZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0taGVhZGVyLWJhY2tncm91bmQpO1xcbiAgaGVpZ2h0OiA4MHB4O1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuLmFwcC10aXRsZSB7XFxuICBmb250LXdlaWdodDogYm9sZDtcXG4gIGZvbnQtc2l6ZTogeHgtbGFyZ2U7XFxufVxcblxcbi5jb250ZW50IHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciA1ZnI7XFxufVxcblxcbi5wcm9qZWN0LXNpZGViYXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICBtaW4taGVpZ2h0OiAxMDB2aDtcXG4gIGdhcDogMTBweDtcXG4gIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXNpZGViYXItYmFja2dyb3VuZCk7XFxuICBvdmVyZmxvdy15OiBhdXRvO1xcbn1cXG5cXG4ucHJvamVjdHMtaGVhZGVyLFxcbi5wcm9qZWN0cy13cmFwcGVyLFxcbi5hZGQtcHJvamVjdC1idG4ge1xcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XFxufVxcblxcbi5wcm9qZWN0cy1oZWFkZXIge1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBmb250LXNpemU6IHh4LWxhcmdlO1xcbiAgbWFyZ2luLXRvcDogMTBweDtcXG59XFxuXFxuLnByb2plY3RzLXdyYXBwZXIge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdhcDogMTBweDtcXG59XFxuXFxuLnByb2plY3QtY2FyZCB7XFxuICB3aWR0aDogODAlO1xcbiAgYm9yZGVyOiBzb2xpZDtcXG4gIHdvcmQtYnJlYWs6IGJyZWFrLWFsbDtcXG4gIC8qIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7ICovXFxuICBwYWRkaW5nOiAxMHB4O1xcbiAgZm9udC1zaXplOiBsYXJnZTtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBnYXA6IDVweDtcXG59XFxuXFxuLnNlbGVjdGVkLXByb2plY3Qge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjOTRhM2I4O1xcbn1cXG5cXG4ucHJvamVjdC1jYXJkIHN2ZyB7XFxuICB3aWR0aDogOCU7XFxuICBmbGV4LXNocmluazogMDtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LWJ0bi13cmFwcGVyIHtcXG4gIGRpc3BsYXk6IGZsZXg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmFkZC1wcm9qZWN0LWJ0biB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMTAwcHg7XFxuICBib3JkZXItcmFkaXVzOiAxMDAlO1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgd2lkdGg6IDQwcHg7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgYm9yZGVyOiBoaWRkZW47XFxuICBtYXJnaW46IDRweDtcXG4gIHBhZGRpbmc6IDEwcHg7XFxuICBiYWNrZ3JvdW5kOiBub25lO1xcbiAgLyogYm94LXNoYWRvdzogMHB4IDBweCA3cHggdmFyKC0tc2hhZG93LWNvbG9yKTsgKi9cXG59XFxuXFxuLmFkZC1wcm9qZWN0LWJ0bjo6YmVmb3JlLFxcbi5hZGQtcHJvamVjdC1idG46OmFmdGVyIHtcXG4gIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHJpZ2h0OiAwO1xcbiAgYm90dG9tOiAwO1xcbiAgYmFja2dyb3VuZDogYmxhY2s7XFxufVxcblxcbi5hZGQtcHJvamVjdC1idG46OmJlZm9yZSB7XFxuICB3aWR0aDogNHB4O1xcbiAgbWFyZ2luOiAxMHB4IGF1dG87XFxufVxcbi5hZGQtcHJvamVjdC1idG46OmFmdGVyIHtcXG4gIG1hcmdpbjogYXV0byAxMHB4O1xcbiAgaGVpZ2h0OiA0cHg7XFxufVxcblxcbi5hZGQtcHJvamVjdC1idG46aG92ZXIge1xcbiAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KSBwZXJzcGVjdGl2ZSgxcHgpO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKSB7XG4gIHZhciBsaXN0ID0gW107XG5cbiAgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuICBsaXN0LnRvU3RyaW5nID0gZnVuY3Rpb24gdG9TdHJpbmcoKSB7XG4gICAgcmV0dXJuIHRoaXMubWFwKGZ1bmN0aW9uIChpdGVtKSB7XG4gICAgICB2YXIgY29udGVudCA9IFwiXCI7XG4gICAgICB2YXIgbmVlZExheWVyID0gdHlwZW9mIGl0ZW1bNV0gIT09IFwidW5kZWZpbmVkXCI7XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBjb250ZW50ICs9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSk7XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07XG5cbiAgLy8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3RcbiAgbGlzdC5pID0gZnVuY3Rpb24gaShtb2R1bGVzLCBtZWRpYSwgZGVkdXBlLCBzdXBwb3J0cywgbGF5ZXIpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgIG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIHVuZGVmaW5lZF1dO1xuICAgIH1cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xuICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICBmb3IgKHZhciBfayA9IDA7IF9rIDwgbW9kdWxlcy5sZW5ndGg7IF9rKyspIHtcbiAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2tdKTtcbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIGlmICh0eXBlb2YgbGF5ZXIgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgaWYgKHR5cGVvZiBpdGVtWzVdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs1XSA9IGxheWVyO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAobWVkaWEpIHtcbiAgICAgICAgaWYgKCFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiaW1wb3J0IHsga2EgfSBmcm9tIFwiZGF0ZS1mbnMvbG9jYWxlXCI7XG5cbmNvbnN0IHRvZG9TdG9yYWdlQ29udHJvbGxlciA9ICgoKSA9PiB7XG4gICAgY29uc3QgdXBkYXRlSXRlbSA9IChwcm9qZWN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHByb2plY3RUYXNrcyA9IHByb2plY3QuZ2V0VGFza3MoKTtcbiAgICAgICAgY29uc3QgSlNPTlRhc2tzID0ge307XG5cbiAgICAgICAgZm9yKGNvbnN0IHRhc2tOYW1lIGluIHByb2plY3RUYXNrcykge1xuICAgICAgICAgICAgY29uc3QgbmV3VGFzayA9IHt9XG4gICAgICAgICAgICBuZXdUYXNrW1widGl0bGVcIl0gPSBwcm9qZWN0VGFza3NbdGFza05hbWVdLmdldFRpdGxlKCk7XG4gICAgICAgICAgICBuZXdUYXNrW1wiZGVzY1wiXSA9IHByb2plY3RUYXNrc1t0YXNrTmFtZV0uZ2V0RGVzYygpO1xuICAgICAgICAgICAgbmV3VGFza1tcIm5vdGVzXCJdID0gcHJvamVjdFRhc2tzW3Rhc2tOYW1lXS5nZXROb3RlcygpO1xuICAgICAgICAgICAgbmV3VGFza1tcImR1ZURhdGVcIl0gPSBwcm9qZWN0VGFza3NbdGFza05hbWVdLmdldER1ZURhdGUoKTtcbiAgICAgICAgICAgIG5ld1Rhc2tbXCJkb25lXCJdID0gcHJvamVjdFRhc2tzW3Rhc2tOYW1lXS5nZXREb25lKCk7XG4gICAgICAgICAgICBuZXdUYXNrW1wicHJpb3JpdHlcIl0gPSBwcm9qZWN0VGFza3NbdGFza05hbWVdLmdldFByaW9yaXR5KCk7XG5cbiAgICAgICAgICAgIEpTT05UYXNrc1t0YXNrTmFtZV0gPSBuZXdUYXNrO1xuICAgICAgICB9XG5cbiAgICAgICAgY29uc3Qgc3RvcmFnZVByb2plY3QgPSB7XG4gICAgICAgICAgICBuYW1lOiBwcm9qZWN0LmdldE5hbWUoKSxcbiAgICAgICAgICAgIGRlc2M6IHByb2plY3QuZ2V0RGVzYygpLFxuICAgICAgICAgICAgbm90ZXM6IHByb2plY3QuZ2V0Tm90ZXMoKSxcbiAgICAgICAgICAgIGR1ZURhdGU6IHByb2plY3QuZ2V0RHVlRGF0ZSgpLFxuICAgICAgICAgICAgdGFza3M6IEpTT05UYXNrc1xuICAgICAgICB9XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKHByb2plY3QuZ2V0TmFtZSgpLCBKU09OLnN0cmluZ2lmeShzdG9yYWdlUHJvamVjdCkpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlbW92ZUl0ZW0gPSAocHJvamVjdE5hbWUpID0+IHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0ocHJvamVjdE5hbWUpO1xuICAgIH1cblxuICAgIGNvbnN0IGNsZWFyU3RvcmFnZSA9ICgpID0+IHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgdXBkYXRlSXRlbSwgcmVtb3ZlSXRlbSwgY2xlYXJTdG9yYWdlIH07XG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCB0b2RvU3RvcmFnZUNvbnRyb2xsZXI7IiwiaW1wb3J0IHRhc2sgZnJvbSAnLi90YXNrJztcbmltcG9ydCBzdG9yYWdlQ29udHJvbGxlciBmcm9tICcuL3N0b3JhZ2UnO1xuXG5jb25zdCBwcm9qZWN0ID0gKCkgPT4ge1xuICAgIGxldCBuYW1lID0gbnVsbDtcbiAgICBsZXQgZGVzYyA9IG51bGw7XG4gICAgbGV0IG5vdGVzID0gbnVsbDtcbiAgICBsZXQgZHVlRGF0ZSA9IG51bGw7XG4gICAgY29uc3QgdGFza3MgPSB7fTtcblxuICAgIGNvbnN0IGdldE5hbWUgPSAoKSA9PiBuYW1lO1xuXG4gICAgY29uc3QgZ2V0RGVzYyA9ICgpID0+IGRlc2M7XG5cbiAgICBjb25zdCBnZXROb3RlcyA9ICgpID0+IG5vdGVzO1xuXG4gICAgY29uc3QgZ2V0RHVlRGF0ZSA9ICgpID0+IGR1ZURhdGU7XG5cbiAgICBjb25zdCBnZXRUYXNrcyA9ICgpID0+IHRhc2tzO1xuXG4gICAgY29uc3Qgc2V0TmFtZSA9IChuZXdOYW1lKSA9PiB7XG4gICAgICAgIG5hbWUgPSBuZXdOYW1lXG5cbiAgICAgICAgZm9yKGNvbnN0IHRhc2sgaW4gdGFza3MpIHtcbiAgICAgICAgICAgIHRhc2tzW3Rhc2tdLnNldFByb2plY3QobmV3TmFtZSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBzZXREZXNjID0gKG5ld0Rlc2MpID0+IHtcbiAgICAgICAgZGVzYyA9IG5ld0Rlc2M7XG4gICAgfVxuXG4gICAgY29uc3Qgc2V0RHVlRGF0ZSA9ICh5ZWFyLCBtb250aCwgZGF5KSA9PiB7XG4gICAgICAgIGlmKHllYXIgaW5zdGFuY2VvZiBOdW1iZXIgJiYgbW9udGggaW5zdGFuY2VvZiBOdW1iZXIgJiYgZGF5IGluc3RhbmNlb2YgTnVtYmVyKSB7XG4gICAgICAgICAgICBkdWVEYXRlID0gbmV3IERhdGUoeWVhciwgbW9udGgsIGRheSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBzZXROb3RlcyA9IChuZXdOb3RlcykgPT4ge1xuICAgICAgICBub3RlcyA9IG5ld05vdGVzO1xuICAgIH1cblxuICAgIGNvbnN0IGNyZWF0ZVRhc2sgPSAodGl0bGUsIGRlc2M9bnVsbCwgZHVlRGF0ZT1udWxsLCBub3Rlcz1udWxsLCBwcmlvcml0eT0wKSA9PiB7XG4gICAgICAgIGlmKCEodGl0bGUgaW4gdGFza3MpKSB7XG4gICAgICAgICAgICBjb25zdCBuZXdUYXNrID0gdGFzaygpO1xuICAgICAgICAgICAgbmV3VGFzay5zZXRUaXRsZSh0aXRsZSk7XG4gICAgICAgICAgICBuZXdUYXNrLnNldERlc2MoZGVzYyk7XG4gICAgICAgICAgICBuZXdUYXNrLnNldER1ZURhdGUoZHVlRGF0ZSk7XG4gICAgICAgICAgICBuZXdUYXNrLnNldE5vdGVzKG5vdGVzKTtcbiAgICAgICAgICAgIG5ld1Rhc2suc2V0UHJpb3JpdHkocHJpb3JpdHkpO1xuICAgICAgICAgICAgbmV3VGFzay5zZXRQcm9qZWN0KG5hbWUpO1xuXG4gICAgICAgICAgICB0YXNrc1t0aXRsZV0gPSBuZXdUYXNrO1xuXG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICB9XG5cbiAgICBjb25zdCByZW1vdmVUYXNrID0gKHRhc2tUaXRsZSkgPT4ge1xuICAgICAgICBkZWxldGUgdGFza3NbdGFza1RpdGxlXTtcbiAgICB9XG5cbiAgICByZXR1cm4geyBnZXROYW1lLCBnZXREZXNjLCBnZXROb3RlcywgZ2V0RHVlRGF0ZSwgZ2V0VGFza3MsIHNldE5hbWUsIHNldERlc2MsIHNldER1ZURhdGUsIHNldE5vdGVzLCBjcmVhdGVUYXNrLCByZW1vdmVUYXNrIH07XG59XG5cbmNvbnN0IHByb2plY3RDb250cm9sbGVyID0gKCgpID0+IHtcbiAgICBcbiAgICBjb25zdCBwcm9qZWN0cyA9IHt9O1xuXG4gICAgY29uc3QgZ2V0UHJvamVjdHMgPSAoKSA9PiBwcm9qZWN0cztcblxuICAgIGNvbnN0IGNyZWF0ZVByb2plY3QgPSAobmFtZSwgZGVzYz1udWxsLCBub3Rlcz1udWxsLCBkdWVEYXRlPW51bGwsIHRhc2tzPW51bGwpID0+IHtcbiAgICAgICAgaWYoIShuYW1lIGluIHByb2plY3RzKSkge1xuICAgICAgICAgICAgY29uc3QgbmV3UHJvamVjdCA9IHByb2plY3QoKTtcblxuICAgICAgICAgICAgbmV3UHJvamVjdC5zZXROYW1lKG5hbWUpO1xuICAgICAgICAgICAgbmV3UHJvamVjdC5zZXREZXNjKGRlc2MpO1xuICAgICAgICAgICAgbmV3UHJvamVjdC5zZXROb3Rlcyhub3Rlcyk7XG4gICAgICAgICAgICBuZXdQcm9qZWN0LnNldER1ZURhdGUoZHVlRGF0ZSk7XG5cbiAgICAgICAgICAgIHByb2plY3RzW25hbWVdID0gbmV3UHJvamVjdDtcblxuICAgICAgICAgICAgZm9yKGNvbnN0IHRhc2tUaXRsZSBpbiB0YXNrcykge1xuICAgICAgICAgICAgICAgIGFkZFRhc2sobmFtZSwgdGFza1RpdGxlLCB0YXNrc1t0YXNrVGl0bGVdLmRlc2MsIHRhc2tzW3Rhc2tUaXRsZV0uZHVlRGF0ZSwgdGFza3NbdGFza1RpdGxlXS5ub3RlcywgdGFza3NbdGFza1RpdGxlXS5wcmlvcml0eSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHN0b3JhZ2VDb250cm9sbGVyLnVwZGF0ZUl0ZW0obmV3UHJvamVjdCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IFxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IGFkZFRhc2sgPSAocHJvamVjdE5hbWUsIHRpdGxlLCBkZXNjPW51bGwsIGR1ZURhdGU9bnVsbCwgbm90ZXM9bnVsbCwgcHJpb3JpdHk9MCkgPT4ge1xuICAgICAgICBjb25zdCBwcm9qZWN0ID0gcHJvamVjdHNbcHJvamVjdE5hbWVdO1xuICAgICAgICBwcm9qZWN0LmNyZWF0ZVRhc2sodGl0bGUsIGRlc2MsIG5vdGVzLCBkdWVEYXRlLCBwcmlvcml0eSk7XG5cbiAgICAgICAgc3RvcmFnZUNvbnRyb2xsZXIudXBkYXRlSXRlbShwcm9qZWN0KTtcbiAgICB9XG5cbiAgICBjb25zdCByZW1vdmVUYXNrID0gKHByb2plY3ROYW1lLCB0YXNrVGl0bGUpID0+IHtcbiAgICAgICAgY29uc3QgcHJvamVjdCA9IHByb2plY3RzW3Byb2plY3ROYW1lXTtcbiAgICAgICAgY29uc3QgdGFzayA9IHByb2plY3QuZ2V0VGFza3MoKVt0YXNrVGl0bGVdO1xuICAgICAgICBwcm9qZWN0LnJlbW92ZVRhc2sodGFzay5nZXRUaXRsZSgpKTtcblxuICAgICAgICBzdG9yYWdlQ29udHJvbGxlci51cGRhdGVJdGVtKHByb2plY3QpO1xuICAgIH1cblxuICAgIGNvbnN0IGRlbGV0ZVByb2plY3QgPSAocHJvamVjdE5hbWUpID0+IHtcbiAgICAgICAgZGVsZXRlIHByb2plY3RzW3Byb2plY3ROYW1lXTtcblxuICAgICAgICBzdG9yYWdlQ29udHJvbGxlci5yZW1vdmVJdGVtKHByb2plY3ROYW1lKTtcbiAgICB9XG5cbiAgICBjb25zdCBsb2FkUHJvamVjdHMgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IHN0b3JlZFByb2plY3RzID0gey4uLmxvY2FsU3RvcmFnZX07XG5cbiAgICAgICAgZm9yKGNvbnN0IHByb2plY3ROYW1lIGluIHN0b3JlZFByb2plY3RzKSB7XG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0T2JqZWN0ID0gSlNPTi5wYXJzZShzdG9yZWRQcm9qZWN0c1twcm9qZWN0TmFtZV0pO1xuICAgICAgICAgICAgY29uc3QgcHJvamVjdFRhc2tzID0gcHJvamVjdE9iamVjdFtcInRhc2tzXCJdXG4gICAgICAgICAgICBjb25zdCBwcm9qZWN0ID0gY3JlYXRlUHJvamVjdChwcm9qZWN0TmFtZSwgcHJvamVjdE9iamVjdFtcImRlc2NcIl0sIHByb2plY3RPYmplY3RbXCJub3Rlc1wiXSwgcHJvamVjdE9iamVjdFtcImR1ZURhdGVcIl0pO1xuICAgICAgICAgICAgZm9yKGNvbnN0IHRhc2sgaW4gcHJvamVjdFRhc2tzKSB7XG4gICAgICAgICAgICAgICAgYWRkVGFzayhwcm9qZWN0TmFtZSwgdGFza1tcInRpdGxlXCJdLCB0YXNrW1wiZGVzY1wiXSwgdGFza1tcImR1ZURhdGVcIl0sIHRhc2tbXCJub3Rlc1wiXSwgdGFza1tcInByaW9yaXR5XCJdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgfVxuXG4gICAgcmV0dXJuIHsgZ2V0UHJvamVjdHMsIGNyZWF0ZVByb2plY3QsIGFkZFRhc2ssIHJlbW92ZVRhc2ssIGRlbGV0ZVByb2plY3QsIGxvYWRQcm9qZWN0cyB9O1xuXG59KSgpO1xuXG5leHBvcnQgZGVmYXVsdCBwcm9qZWN0Q29udHJvbGxlcjsiLCJjb25zdCB0YXNrID0gKCkgPT4ge1xuICAgIGxldCB0aXRsZSA9IG51bGw7XG4gICAgbGV0IGRlc2MgPSBudWxsO1xuICAgIGxldCBkdWVEYXRlID0gbnVsbDtcbiAgICBsZXQgbm90ZXMgPSBudWxsO1xuICAgIGxldCBwcmlvcml0eSA9IG51bGw7XG4gICAgbGV0IGRvbmUgPSBmYWxzZTtcbiAgICBsZXQgcHJvamVjdCA9IG51bGw7XG5cbiAgICBjb25zdCBnZXRUaXRsZSA9ICgpID0+IHRpdGxlO1xuXG4gICAgY29uc3QgZ2V0RGVzYyA9ICgpID0+IGRlc2M7XG5cbiAgICBjb25zdCBnZXREdWVEYXRlID0gKCkgPT4gZHVlRGF0ZTtcblxuICAgIGNvbnN0IGdldE5vdGVzID0gKCkgPT4gbm90ZXM7XG4gICAgXG4gICAgY29uc3QgZ2V0UHJpb3JpdHkgPSAoKSA9PiBwcmlvcml0eTtcblxuICAgIGNvbnN0IGdldERvbmUgPSAoKSA9PiBkb25lO1xuXG4gICAgY29uc3QgZ2V0UHJvamVjdCA9ICgpID0+IHByb2plY3Q7XG5cbiAgICBjb25zdCBzZXRUaXRsZSA9IChuZXdUaXRsZSkgPT4ge1xuICAgICAgICB0aXRsZSA9IG5ld1RpdGxlO1xuICAgIH1cblxuICAgIGNvbnN0IHNldERlc2MgPSAobmV3RGVzYykgPT4ge1xuICAgICAgICBkZXNjID0gbmV3RGVzYztcbiAgICB9XG5cbiAgICBjb25zdCBzZXREdWVEYXRlID0gKHllYXIsIG1vbnRoLCBkYXkpID0+IHtcbiAgICAgICAgaWYoeWVhciBpbnN0YW5jZW9mIE51bWJlciAmJiBtb250aCBpbnN0YW5jZW9mIE51bWJlciAmJiBkYXkgaW5zdGFuY2VvZiBOdW1iZXIpIHtcbiAgICAgICAgICAgIGR1ZURhdGUgPSBuZXcgRGF0ZSh5ZWFyLCBtb250aCwgZGF5KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHNldE5vdGVzID0gKG5ld05vdGVzKSA9PiB7XG4gICAgICAgIG5vdGVzID0gbmV3Tm90ZXM7XG4gICAgfVxuXG4gICAgY29uc3Qgc2V0UHJpb3JpdHkgPSAobmV3UHJpb3JpdHkpID0+IHtcbiAgICAgICAgcHJpb3JpdHkgPSBuZXdQcmlvcml0eTtcbiAgICB9XG5cbiAgICBjb25zdCBzZXRQcm9qZWN0ID0gKHByb2plY3ROYW1lKSA9PiB7XG4gICAgICAgIHByb2plY3QgPSBwcm9qZWN0TmFtZTtcbiAgICB9XG5cbiAgICBjb25zdCB0b2dnbGVEb25lID0gKCkgPT4ge1xuICAgICAgICBkb25lID0gIWRvbmU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgZ2V0VGl0bGUsIGdldERlc2MsIGdldE5vdGVzLCBnZXREdWVEYXRlLCBnZXRQcmlvcml0eSwgZ2V0RG9uZSwgZ2V0UHJvamVjdCwgc2V0VGl0bGUsIHNldERlc2MsIHNldER1ZURhdGUsIHNldE5vdGVzLCBzZXRQcmlvcml0eSwgc2V0UHJvamVjdCwgdG9nZ2xlRG9uZSB9O1xufVxuXG5leHBvcnQgZGVmYXVsdCB0YXNrOyIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm5jID0gdW5kZWZpbmVkOyIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3N0eWxlLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBoZWFkZXJEaXNwbGF5IGZyb20gJy4vaGVhZGVyJztcbmltcG9ydCBwcm9qZWN0Q29udHJvbGxlciBmcm9tICcuL3Byb2plY3QnO1xuaW1wb3J0IGNyZWF0ZVNWRyBmcm9tICcuL3N2Zyc7XG5pbXBvcnQgJy4vY3NzL3N0eWxlLmNzcyc7XG5cbmNvbnN0IGRpc3BsYXlDb250cm9sbGVyID0gKCgpID0+IHtcblxuICAgIGxldCBzZWxlY3RlZFByb2plY3QgPSBudWxsO1xuXG4gICAgY29uc3QgZGlzcGxheUhlYWRlciA9ICgoKSA9PiB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoaGVhZGVyRGlzcGxheSgpKTtcbiAgICB9KSgpO1xuXG4gICAgY29uc3QgZGlzcGxheUNvbnRlbnQgPSAoKCkgPT4ge1xuICAgICAgICBjb25zdCBjb250ZW50V3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGNvbnRlbnRXcmFwcGVyLmNsYXNzTGlzdC5hZGQoXCJjb250ZW50XCIpO1xuXG4gICAgICAgIGNvbnN0IHByb2plY3RTaWRlYmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICAgICAgcHJvamVjdFNpZGViYXIuY2xhc3NMaXN0LmFkZChcInByb2plY3Qtc2lkZWJhclwiKTtcblxuICAgICAgICBjb25zdCBwcm9qZWN0VmlldyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHByb2plY3RWaWV3LmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0LXZpZXdcIik7XG5cbiAgICAgICAgcHJvamVjdENvbnRyb2xsZXIuY3JlYXRlUHJvamVjdChcImhzZGFzZGZkZmprZHNqZnNkamZzZGlkZmpzZGZqaXNkZmlqc2Zkc2RmZHNmc2Rzamtsc3Nma2pkc2xsa3NmanNmZGprbHNma2RqbGZqc2RrbGlqc29kZnNkZmlqXCIsIFwiYXNkc2hmdWZhc1wiLCBudWxsLCBudWxsLCB7XG4gICAgICAgICAgICBcInNkYVwiOiB7XG4gICAgICAgICAgICAgICAgbmFtZTogXCJzZGFcIixcbiAgICAgICAgICAgICAgICBkZXNjOiBcInNhZlwiLFxuICAgICAgICAgICAgICAgIG5vdGVzOiBcIlNhZGRhc1wiLFxuICAgICAgICAgICAgICAgIGR1ZURhdGU6IFwiZHNhZGFzXCIsXG4gICAgICAgICAgICAgICAgcHJpb3JpdHk6IDBcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29udGVudFdyYXBwZXIuYXBwZW5kQ2hpbGQocHJvamVjdFNpZGViYXIpO1xuICAgICAgICBjb250ZW50V3JhcHBlci5hcHBlbmRDaGlsZChwcm9qZWN0Vmlldyk7XG5cbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250ZW50V3JhcHBlcik7XG4gICAgfSkoKTtcblxuICAgIGNvbnN0IGRpc3BsYXlQcm9qZWN0c1NpZGViYXIgPSAocHJvamVjdHMpID0+IHtcbiAgICAgICAgY29uc3Qgc2lkZWJhcldyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2plY3Qtc2lkZWJhclwiKTtcbiAgICAgICAgc2lkZWJhcldyYXBwZXIucmVwbGFjZUNoaWxkcmVuKCk7IC8vIGNsZWFyIHByZXZpb3VzIGNoaWxkcmVuIGlmIGFueS5cblxuICAgICAgICBjb25zdCBwcm9qZWN0c0hlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHByb2plY3RzSGVhZGVyLmNsYXNzTGlzdC5hZGQoXCJwcm9qZWN0cy1oZWFkZXJcIik7XG4gICAgICAgIHByb2plY3RzSGVhZGVyLnRleHRDb250ZW50ID0gXCJQcm9qZWN0c1wiO1xuXG4gICAgICAgIGNvbnN0IHByb2plY3RzV3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHByb2plY3RzV3JhcHBlci5jbGFzc0xpc3QuYWRkKFwicHJvamVjdHMtd3JhcHBlclwiKTtcblxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0QnRuV3JhcHBlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIGFkZFByb2plY3RCdG5XcmFwcGVyLmNsYXNzTGlzdC5hZGQoXCJhZGQtcHJvamVjdC1idG4td3JhcHBlclwiKTtcblxuICAgICAgICBjb25zdCBhZGRQcm9qZWN0QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImJ1dHRvblwiKTtcbiAgICAgICAgYWRkUHJvamVjdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKFwiYWRkLXByb2plY3QtYnRuXCIpO1xuICAgICAgICBhZGRQcm9qZWN0QnRuV3JhcHBlci5hcHBlbmRDaGlsZChhZGRQcm9qZWN0QnV0dG9uKTtcblxuICAgICAgICBmb3IoY29uc3QgcHJvamVjdE5hbWUgaW4gcHJvamVjdHMpIHtcbiAgICAgICAgICAgIGRpc3BsYXlQcm9qZWN0Q2FyZChwcm9qZWN0c1twcm9qZWN0TmFtZV0sIHByb2plY3RzV3JhcHBlcik7XG4gICAgICAgIH1cblxuICAgICAgICBzaWRlYmFyV3JhcHBlci5hcHBlbmRDaGlsZChwcm9qZWN0c0hlYWRlcik7XG4gICAgICAgIHNpZGViYXJXcmFwcGVyLmFwcGVuZENoaWxkKHByb2plY3RzV3JhcHBlcik7XG4gICAgICAgIHNpZGViYXJXcmFwcGVyLmFwcGVuZENoaWxkKGFkZFByb2plY3RCdG5XcmFwcGVyKTtcbiAgICB9O1xuXG4gICAgY29uc3Qgc2VsZWN0UHJvamVjdCA9IChlKSA9PiB7XG4gICAgICAgIGlmKHNlbGVjdGVkUHJvamVjdCkge1xuICAgICAgICAgICAgc2VsZWN0ZWRQcm9qZWN0LmNsYXNzTGlzdC5yZW1vdmUoXCJzZWxlY3RlZC1wcm9qZWN0XCIpO1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IHRoaXNQcm9qZWN0ID0gZS5zcmNFbGVtZW50O1xuICAgICAgICB3aGlsZSghdGhpc1Byb2plY3QuY2xhc3NMaXN0LmNvbnRhaW5zKFwicHJvamVjdC1jYXJkXCIpKSB7XG4gICAgICAgICAgICB0aGlzUHJvamVjdCA9IHRoaXNQcm9qZWN0LnBhcmVudEVsZW1lbnQ7XG4gICAgICAgIH1cbiAgICAgICAgdGhpc1Byb2plY3QuY2xhc3NMaXN0LmFkZChcInNlbGVjdGVkLXByb2plY3RcIik7XG5cbiAgICAgICAgc2VsZWN0ZWRQcm9qZWN0ID0gdGhpc1Byb2plY3Q7XG5cbiAgICAgICAgY29uc3Qgc2VsZWN0ZWRQcm9qZWN0TmFtZSA9IHRoaXNQcm9qZWN0LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC1uYW1lXCIpLnRleHRDb250ZW50O1xuICAgICAgICBkaXNwbGF5UHJvamVjdChzZWxlY3RlZFByb2plY3ROYW1lKTtcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwbGF5UHJvamVjdENhcmQgPSAocHJvamVjdCwgcHJvamVjdHNXcmFwcGVyKSA9PiB7XG4gICAgICAgIGNvbnN0IGNoZWNrRFZhbCA9IFwiTTQzOC42IDEwNS40YzEyLjUgMTIuNSAxMi41IDMyLjggMCA0NS4zbC0yNTYgMjU2Yy0xMi41IDEyLjUtMzIuOCAxMi41LTQ1LjMgMGwtMTI4LTEyOGMtMTIuNS0xMi41LTEyLjUtMzIuOCAwLTQ1LjNzMzIuOC0xMi41IDQ1LjMgMEwxNjAgMzM4LjcgMzkzLjQgMTA1LjRjMTIuNS0xMi41IDMyLjgtMTIuNSA0NS4zIDB6XCI7XG5cbiAgICAgICAgY29uc3QgcHJvamVjdFdyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgICAgICBwcm9qZWN0V3JhcHBlci5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1jYXJkXCIpO1xuXG4gICAgICAgIGNyZWF0ZVNWRyhwcm9qZWN0V3JhcHBlciwgY2hlY2tEVmFsKTtcblxuICAgICAgICBjb25zdCBwcm9qZWN0TmFtZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIpO1xuICAgICAgICBwcm9qZWN0TmFtZS5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1uYW1lXCIpO1xuICAgICAgICBwcm9qZWN0TmFtZS50ZXh0Q29udGVudCA9IHByb2plY3QuZ2V0TmFtZSgpO1xuXG4gICAgICAgIHByb2plY3RXcmFwcGVyLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBzZWxlY3RQcm9qZWN0KTtcblxuICAgICAgICBwcm9qZWN0V3JhcHBlci5hcHBlbmRDaGlsZChwcm9qZWN0TmFtZSk7XG5cbiAgICAgICAgcHJvamVjdHNXcmFwcGVyLmFwcGVuZENoaWxkKHByb2plY3RXcmFwcGVyKTtcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwbGF5UHJvamVjdCA9IChwcm9qZWN0TmFtZSkgPT4ge1xuICAgICAgICBjb25zdCBwcm9qZWN0VmlldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvamVjdC12aWV3XCIpO1xuICAgICAgICBwcm9qZWN0Vmlldy5yZXBsYWNlQ2hpbGRyZW4oKTsgLy8gY2xlYXIgcHJldmlvdXMgcHJvamVjdFxuXG4gICAgICAgIGNvbnN0IHByb2plY3QgPSBwcm9qZWN0Q29udHJvbGxlci5nZXRQcm9qZWN0cygpW3Byb2plY3ROYW1lXTtcbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHByb2plY3ROYW1lRGlzcGxheSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIik7XG4gICAgICAgIHByb2plY3ROYW1lRGlzcGxheS5jbGFzc0xpc3QuYWRkKFwicHJvamVjdC1uYW1lLWRpc3BsYXlcIik7XG4gICAgICAgIHByb2plY3ROYW1lRGlzcGxheS50ZXh0Q29udGVudCA9IHByb2plY3ROYW1lO1xuXG4gICAgICAgIHByb2plY3RWaWV3LmFwcGVuZENoaWxkKHByb2plY3ROYW1lRGlzcGxheSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgZGlzcGxheVByb2plY3RzU2lkZWJhciB9O1xufSkoKTtcblxuY29uc3QgYXBwQ29udHJvbGxlciA9ICgoKSA9PiB7XG4gICAgY29uc3QgbG9hZFByb2plY3RzID0gKCgpID0+IHtcbiAgICAgICAgcHJvamVjdENvbnRyb2xsZXIubG9hZFByb2plY3RzKCk7XG4gICAgICAgIGNvbnN0IHByb2plY3RzID0gcHJvamVjdENvbnRyb2xsZXIuZ2V0UHJvamVjdHMoKTtcbiAgICAgICAgZGlzcGxheUNvbnRyb2xsZXIuZGlzcGxheVByb2plY3RzU2lkZWJhcihwcm9qZWN0cyk7XG4gICAgfSkoKTtcbn0pKCk7XG4iLCJjb25zdCBkaXNwbGF5ID0gKCkgPT4ge1xuICAgIGNvbnN0IGhlYWRlcldyYXBwZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGhlYWRlcldyYXBwZXIuY2xhc3NMaXN0LmFkZChcImhlYWRlclwiKTtcbiAgICBcbiAgICBjb25zdCBhcHBOYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNwYW5cIik7XG4gICAgYXBwTmFtZS5jbGFzc0xpc3QuYWRkKFwiYXBwLXRpdGxlXCIpO1xuICAgIGFwcE5hbWUudGV4dENvbnRlbnQgPSBcIlRvIERvIExpc3RcIjtcblxuICAgIGhlYWRlcldyYXBwZXIuYXBwZW5kQ2hpbGQoYXBwTmFtZSk7XG5cbiAgICByZXR1cm4gaGVhZGVyV3JhcHBlclxufVxuXG5leHBvcnQgZGVmYXVsdCBkaXNwbGF5OyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNyZWF0ZVNWRyhub2RlLCBkVmFsLCBzdmdDbGFzc2VzPVtdLCBwYXRoQXR0cnM9W10pIHtcbiAgICBjb25zdCBpY29uU3ZnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudE5TKFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXCJzdmdcIik7XG4gICAgY29uc3QgaWNvblBhdGggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50TlMoXG4gICAgICAgIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIiwgXG4gICAgICAgIFwicGF0aFwiXG4gICAgKTtcbiAgICBpY29uU3ZnLnNldEF0dHJpYnV0ZShcInhtbG5zXCIsIFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIik7XG4gICAgaWNvblN2Zy5zZXRBdHRyaWJ1dGUoJ2ZpbGwnLCAnY3VycmVudENvbG9yJyk7XG4gICAgaWNvblN2Zy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCAnMCAwIDUxMiA1MTInKTtcbiAgICBpY29uU3ZnLmNsYXNzTGlzdC5hZGQoJ3Bvc3QtaWNvbicpO1xuICAgIGZvcihsZXQgaSA9IDA7IGkgPCBzdmdDbGFzc2VzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGljb25TdmcuY2xhc3NMaXN0LmFkZChzdmdDbGFzc2VzW2ldKTtcbiAgICB9XG5cbiAgICBmb3IobGV0IGkgPSAwOyBpIDwgcGF0aEF0dHJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGljb25QYXRoLnNldEF0dHJpYnV0ZShwYXRoQXR0cnNbaV1bMF0sIHBhdGhBdHRyc1tpXVsxXSk7XG4gICAgfVxuICAgIGljb25QYXRoLnNldEF0dHJpYnV0ZShcImRcIiwgZFZhbCk7XG4gICAgXG5cbiAgICBpY29uU3ZnLmFwcGVuZENoaWxkKGljb25QYXRoKTtcblxuICAgIHJldHVybiBub2RlLmFwcGVuZENoaWxkKGljb25TdmcpO1xufSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsInVwZGF0ZUl0ZW0iLCJwcm9qZWN0IiwicHJvamVjdFRhc2tzIiwiZ2V0VGFza3MiLCJKU09OVGFza3MiLCJ0YXNrTmFtZSIsIm5ld1Rhc2siLCJnZXRUaXRsZSIsImdldERlc2MiLCJnZXROb3RlcyIsImdldER1ZURhdGUiLCJnZXREb25lIiwiZ2V0UHJpb3JpdHkiLCJzdG9yYWdlUHJvamVjdCIsIm5hbWUiLCJnZXROYW1lIiwiZGVzYyIsIm5vdGVzIiwiZHVlRGF0ZSIsInRhc2tzIiwibG9jYWxTdG9yYWdlIiwic2V0SXRlbSIsInJlbW92ZUl0ZW0iLCJwcm9qZWN0TmFtZSIsImNsZWFyU3RvcmFnZSIsImNsZWFyIiwicHJvamVjdENvbnRyb2xsZXIiLCJwcm9qZWN0cyIsImNyZWF0ZVByb2plY3QiLCJuZXdQcm9qZWN0Iiwic2V0TmFtZSIsIm5ld05hbWUiLCJ0YXNrIiwic2V0UHJvamVjdCIsInNldERlc2MiLCJuZXdEZXNjIiwic2V0RHVlRGF0ZSIsInllYXIiLCJtb250aCIsImRheSIsIk51bWJlciIsIkRhdGUiLCJzZXROb3RlcyIsIm5ld05vdGVzIiwiY3JlYXRlVGFzayIsInRpdGxlIiwicHJpb3JpdHkiLCJzZXRUaXRsZSIsInNldFByaW9yaXR5IiwicmVtb3ZlVGFzayIsInRhc2tUaXRsZSIsImFkZFRhc2siLCJzdG9yYWdlIiwiZ2V0UHJvamVjdHMiLCJkZWxldGVQcm9qZWN0IiwibG9hZFByb2plY3RzIiwic3RvcmVkUHJvamVjdHMiLCJwcm9qZWN0T2JqZWN0IiwicGFyc2UiLCJkb25lIiwiZ2V0UHJvamVjdCIsIm5ld1RpdGxlIiwibmV3UHJpb3JpdHkiLCJ0b2dnbGVEb25lIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm4iLCJnZXR0ZXIiLCJfX2VzTW9kdWxlIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJuYyIsImxvY2FscyIsImRpc3BsYXlDb250cm9sbGVyIiwic2VsZWN0ZWRQcm9qZWN0IiwiYm9keSIsImhlYWRlcldyYXBwZXIiLCJjbGFzc0xpc3QiLCJhZGQiLCJhcHBOYW1lIiwidGV4dENvbnRlbnQiLCJoZWFkZXIiLCJjb250ZW50V3JhcHBlciIsInByb2plY3RTaWRlYmFyIiwicHJvamVjdFZpZXciLCJzZWxlY3RQcm9qZWN0IiwidGhpc1Byb2plY3QiLCJzcmNFbGVtZW50IiwiY29udGFpbnMiLCJwYXJlbnRFbGVtZW50Iiwic2VsZWN0ZWRQcm9qZWN0TmFtZSIsImRpc3BsYXlQcm9qZWN0IiwiZGlzcGxheVByb2plY3RDYXJkIiwicHJvamVjdHNXcmFwcGVyIiwicHJvamVjdFdyYXBwZXIiLCJub2RlIiwiZFZhbCIsInN2Z0NsYXNzZXMiLCJwYXRoQXR0cnMiLCJpY29uU3ZnIiwiY3JlYXRlRWxlbWVudE5TIiwiaWNvblBhdGgiLCJjcmVhdGVTVkciLCJhZGRFdmVudExpc3RlbmVyIiwicmVwbGFjZUNoaWxkcmVuIiwicHJvamVjdE5hbWVEaXNwbGF5IiwiZGlzcGxheVByb2plY3RzU2lkZWJhciIsInNpZGViYXJXcmFwcGVyIiwicHJvamVjdHNIZWFkZXIiLCJhZGRQcm9qZWN0QnRuV3JhcHBlciIsImFkZFByb2plY3RCdXR0b24iXSwic291cmNlUm9vdCI6IiJ9